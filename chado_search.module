<?php

use ChadoSearch\ChadoSearch;

require_once 'api/chado_search.api.php';

function chado_search_init() {
  drupal_add_css ( drupal_get_path ( 'module', 'chado_search' ) . '/theme/css/chado_search.css' );
  drupal_add_js ( drupal_get_path ( 'module', 'chado_search' ) . '/theme/js/chado_search.js' );
}

function chado_search_menu() {
  $items = array ();
  
  // Mainlab group
  $items['admin/mainlab'] = array(
    'title' => 'Mainlab',
    'description' => t("Manage the behavior or Mainlab modules."),
    'weight' => -1,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  // Chado Search admin Interface
  $items['admin/mainlab/chado_search/settings'] = array(
    'title' => 'Chado Search',
    'description' => ('Settings for the mainlab chado search.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('chado_search_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/chado_search.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/mainlab/chado_search/action/%/%'] = array(
    'page callback' => 'chado_search_admin_action',
    'page arguments' => array(4, 5),
    'access arguments' => array('administer site configuration'),
    'file' =>  'includes/chado_search.admin.inc',
    'type' => MENU_CALLBACK,
  );
  // Enabled search listed in the conf file
  $enabledSearch = chado_search_get_enabled_searches ();
  foreach ( $enabledSearch as $search ) {
    $id = key_exists('id', $search) ? $search ['id'] : NULL;
    $path = key_exists('path', $search) ? $search ['path'] : NULL;
    $title = key_exists('title', $search) ? $search ['title'] : NULL;
    $file = key_exists('file', $search) ? $search ['file'] : NULL;
    $ajax = key_exists('ajax', $search) ? $search ['ajax'] : NULL;
    $new_item = ChadoSearch::init ($id, $path)->buildMenu ($title, $file, $ajax);
    $items = array_merge ( $items, $new_item );
  }
  
  return $items;
}

// Auto load classes so we don't need 'require_once' when they're used
spl_autoload_register(function ($class) {
  $class_path = preg_replace('/^ChadoSearch/','api', $class) . '.php';
  $class_path = str_replace('\\', '/', $class_path);
  //dpm($class_path);
  if (file_exists(drupal_get_path('module', 'chado_search') . '/' . $class_path)) {
    include_once $class_path;
  }
});